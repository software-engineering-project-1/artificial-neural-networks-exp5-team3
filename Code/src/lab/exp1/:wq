<!-- This file needs to be edited by the lab developer to suit
the requirements of their lab in particular.-->

<!-- Add class="default" to include any element as it is
specified in default.html. 
Do not include class="default" to the elements that you want to
edit -->

<!DOCTYPE html>
<html>
<head> <title>Artificial Neural Networks </title> </head>
<body>

<div id="experiment"> <!-- The Experiment Document Container-->

  <!-- The lab Header contains the logo and the name of the lab,
  usually displayed on the top of the page-->

  <header id="experiment-header" class="default">
  
    <div id="experiment-header-logo" class="logo">
      <!-- Enclose the logo image of your lab or write it in 
      text-->
      <!-- <img src="../images/logo.jpg" /> -->

    </div>

    <div id="experiment-header-heading" class="heading">
      <!-- Write the name of your lab and link it to the home 
      page of your lab (h1 tag is preferred while writing your 
      lab name)-->
      <a href="../index.html">Artificial Neural Networks Virtual Lab</a>	
    </div>

    <!-- Add any additional element you want to add to the lab 
    header, For example : Help (Enclosing them with suitable 
    div is recommended)-->

  </header>


  <!-- The lab article is the main content area where all the 
  experiment content sits-->
  <article id="experiment-article">
  
    <!-- The lab article has an header, optional navigational 
    menu, number of sections, an optional sidebar and a closing 
    footer-->
    
      <header id="experiment-article-heading" class="heading">
        <!-- You can add a welcome message or title of the 
        experiment here -->
	Parallel and distributed processing - I: Interactive activation and competition models
        <!-- Add any additional element if required with proper 
        enclosing-->
      </header>

      <!-- Navigation menu is useful to organize the view of 
      multiple sections inside the article-->
      <nav id="experiment-article-navigation" class="default">
        <ul id="experiment-article-navigation-menu">
          <!-- The menu can be dynamically generated to contain 
          the headings of your sections or instead write the 
          menu items of your choice individually enclosedu in 
          <li> tag as shown below-->
        </ul>
      </nav>

      <!-- All the sections of your lab or experiment can be 
      enclosed together with a div element as shown below-->
      <div id="experiment-article-sections">

 <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
        <!-- First section of the article-->
        <section id="experiment-article-section-1">
          
          <div id="experiment-article-section-1-icon" 
          class="icon">
	    <!-- Enclose the icon image of your lab -->
	    <img src="../images/objective.jpg" />
	  </div>	
          
          <!-- The heading for the section can be enclosed in a 
          div tag. -->
          <div id="experiment-article-section-1-heading" 
          class="heading">
            Objective
          </div>

          <!-- Write the section content inside a paragraph 
          element, You can also include images with <img> tag -->
          <div id="experiment-article-section-1-content" 
          class="content">	
            <p>
<P>The objective of IAC model is to illustrate the process of retrieving general and specific information from stored knowledge of specifics.
Some of the features of the human memory that are illustrated with this model are:</P>
<OL>
	<OL>
		<OL>
			<LI><P>Retrieval by key (name) and by context.</P>
			<LI><P>Retrieval with noisy clues.</P>
			<LI><P>Assignment of default values and spontaneous generalization.</P>
		</OL>
	</OL>
</OL>
<P><BR><BR>
            </p>


          <!-- <img src="../images/Pendulum.JPG" alt="pendulum"> -->
        </div>


      </section>

      <!-- Second section of the article-->


 <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
      </section>

      <section id="experiment-article-section-2">
   
        <div id="experiment-article-section-2-icon" 
        class="icon">
	  <!-- Enclose the icon image of your lab.-->
	<img src="../images/theory.jpg" />
	</div>

        <div id="experiment-article-section-2-heading" 
        class="heading">
         Tutorial 
        </div>

        <div id="experiment-article-section-2-content" 
        class="content">

        <h3>PDP Model Development</h3>
<p>
This model is illustrated by the help of Jets and Sharks database described in [McClelland, 1981] and also given in the following table. 
</p>
<IFRAME src = "tableTEMP.html" width = "600" height= "700"></IFRAME>

<p>
The information about such a data, if stored in a computer memory, can be accessed by name or by any other set of items which can serve as a key to a particular set of information.
But this requires the method of access to be pre-programmed in the system. Moreover, certain characteristics of the data like the distribution of persons in different age groups or the 
'common' characteristics among some persons, etc, can be obtained only by programming explicitly to derive the information embedded in the data. In other words, any information 
in the data has to be sought explicitly. On the other hand human memory stores the information in the data in terms of patterns, and these patterns are useful to recall information even with partial clues. These features of the human memory can be demonstrated through representation in the form of a Parallel and Distributed Processing model, as shown in the figure below.
</p>

<p>
		<!--Figure HERE -->
<table width="750"><tr><td height = "450">
<img src = "images/jetshark.gif" style="height:90%;width:90%"></td></tr>
<caption align="bottom"> Fig. 1: Figure illustrating the units and connections among those units in different pools. 
Though here only some units are shown, but actually we have 27 units in the 'Name' pool. 
Similarly there are 27 units in the 'Instance' pool, 2 in the 'Gang' pool and then 3 in rest of the other 4 pools.</caption></table>

</p>

<p>
In the figure, the units are organized into different pools, such as 'Name' pool, 'Age' pool, etc. 
The number of units in each pool corresponds to different possibilities in that category, 
as for example, 27 units in the 'Name' pool and 3 units in the 'Age' pool, etc. 
There are as many pools as there are categories (6 in this case), plus one additional pool called the 'Instance' pool. 
</p>

<h3> PDP Model Description</h3>

<p> Units within each pool are connected in an <i>inhibitory</i> manner, i.e., the output of each unit is fed with a 
negative weight to all other units in the same pool. The units in each pool 
are connected to the corresponding units in the instance pool in an <i>excitatory</i> manner, i.e., the connection weights are positive. 
For example, here, the 'Ralph' unit in the 'Name' pool, 'Jets' unit in the 'Gang' pool, 'in 30s' unit in the 'Age' pool, 
'JH' unit in the 'Education' pool, 'pusher' unit in the 'Occupation' pool and 'Unmarried' unit in the 'Marital status' pool 
are all connected to the 'Ralph' unit in the 'instance' pool with positive weights. 
The units in the 'instance' pool are called <i>"hidden"</i> units, since by design, they are not accessible for any input or output. 
The units in all other pools are <i>"visible"</i> units.  Only 5 of 27 units are shown in the 
'Name' pool and the 'instance' pool for illustration. Also, the inhibitory connections within each pool are not shown in the figure. 
</p>

<p>
There are a total of 68 units in the model. Each unit computes
a weighted sum of the input values to the unit fed from other units,
as well as from external inputs, if any. The weighted sum or the
activation value is passed through a nonlinear output function, which
gives as output the activation value itself, if the sum lies between
some prespecified minimum and maximum values. Otherwise, the
function gives either the minimum value at the lower limit or the 
maximum value at the upper limit. The state of the model is described
as the collection of outputs of all the 68 units at any given instant of time. Starting
from any state, the next state can be computed by selecting a unit
at random and computing the weighted sum of its inputs first and
then the output of the unit. Due to change in the value of the output
of this unit, the model goes to a different state. Then another unit
is selected at random, and the new state for that unit is determined.
All the units are updated by selecting the units in a random sequence,
to compute one <i>cycle</i> of <i>activation dynamics</i>. After several cycles, the
model is guaranteed to reach a stable equilibrium state, when there
will not be any further change in the state of the model.
</p>

<p>
For each set of external inputs, the model reaches a stable state
eventually. From the stable state the stored data can be read out.
For example, if we want the data about 'Ralph', the output (state) of the 'Ralph' unit in the 'Name' pool is set to maximum. Starting
with some initial values of state on other units, the network states are computed for
several cycles, until an equilibrium state is reached. At equilibrium,
there will be one unit in each pool having large positive value. Those
units correspond to the data that belongs to 'Ralph'.
</p>

<h3>Features Demonstrated By The Model</h3>

<p>
The model demonstrates several features of the functioning of the
biological neural network in human memory. Some of the features
are: (a) Retrieving an individual's data from his name, (b) retrieval
from a partial description, (c) graceful degradation, (d) default
assignment, and (e) spontaneous generalization for novel inputs. The
most important point is that the model stores the patterns embedded
in the given data. Therefore from the model, one could get even such
information for which the model was not explicitly designed. For
example, in the feature of default assignment, the model gives
possible good guess about missing information, even though we do
not know certain things about an individual. It evaluates the relative
strengths of the attributes from the given data in a complex manner,
which is difficult to describe explicitly. Thus, this model clearly brings
out the distinction between computer memory and human memory
for storage and retrieval of information. The model also brings out
the features of content-addressable memories and associative
memories for information retrieval. Note the distributed nature of the
memory in this model, in the sense that, the information is distributed
in the weights throughout the network. Also note the parallel and
distributed nature of the activation dynamics when the model is
realized in hardware, and also when it is allowed to relax naturally
changing from one state to another until an equilibrium state is
reached from the given initial state and external input. 
Spontaneous generalization is the ability to provide a generalized picture of what is common to the memories that match the cues which are too vague to match a particular memory.
</p>

          </div>
        </section>

 <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->

      <section id="experiment-article-section-3">

        <div id="experiment-article-section-3-icon" 
        class="icon">
	<img src="../images/simulation.jpg" />
	</div>

        <div id="experiment-article-section-3-heading" 
        class="heading">
        Illustration 
        </div>

        <div id="experiment-article-section-3-content" 
        class="content">

<h3>Illustration of Interactive Activation and Competition Model</h3>

          <p>
There are a total of 68 units in this model. Each unit computes a weighted sum of the input values to the unit, fed from other units as well as external inputs, if any.
The weighted sum or the activation value is passed through a non-linear output function, which gives as output, the activation value itself, if the sum lies between some 
prespecified minimum and maximum values. Otherwise, the function gives either the minimum value at lower limit or the maximum value at the upper limit. The state of the model is described 
as output of all the 68 units at any given instance of time. Starting from any state, the next state can be computed by selecting a unit at random and computing the weighted sum of its inputs first, and then the output of the function. 
          </p>
<p>
Due to change in the value of the output of this unit, the model goes to a different state. Then another unit is selected at random and the new state for that unit is determined. 
All the units are updated by selecting all the units in a random sequence, to compute one </i>cycle</i> of activation dynamics. After several cycles, the model is guaranteed to reach 
equillibrium state, when there will not be any further change in the state of the model. 
</p>
<p>
For each set of external inputs, the model reaches a stable state eventually. From the stable state the stored data can be read out.
For example, if we want the data about 'Ralph', the output (state) of the 'Ralph' unit in the 'Name' pool is set to maximum. Starting
with some initial values of state on other units, the network states are computed for
several cycles, until an equilibrium state is reached. At equilibrium, there will be one unit in each pool having large positive value. 
Those units correspond to the data that belongs to 'Ralph'.
</p>
<p>
In the experiment here, in the initial state we can see, as illustrated by the following figure, how 'Ralph' unit is connected in an inhibitory sense 
(illustrated by red connections) with the rest of the members of the 'Name' pool. Also it is connected by an excitatory connection to the unit 'Ralph' in 
the 'instance' pool (illustrated by a green connection). 
</p>
<p>
		<!--Figure HERE -->
<table width="750"><tr><td height = "450">
<img src = "images/Ralph_Init.png" style="height:90%;width:90%"></td></tr></table>

</p>
<P>
Now, when an external input is applied by changing the state of the 'Ralph' unit (as by clicking the mouse over 'Ralph' node in the 'Name' pool) 
we see that all the nodes settle down to a stable state after sometime. 
</P>
<P>
		<!--Figure HERE -->
<table width="750"><tr><td height = "450">
<img src = "images/Ralph_ExtInp1.png" style="height:90%;width:90%"></td></tr></table>
</P>
<P>
Finally when we try to read out the data related to 'Ralph' unit from the model, 
we just need to visit every pool and find out which node has the highest positive value. 
That data belongs to 'Ralph' unit. 
</P>
<P>
		<!--Figure HERE -->
<table width="750"><tr><td height = "450">
<img src = "images/Ralph_Result.png" style="height:90%;width:90%"></td></tr></table>
</P>
For this experiment, we can provide external bias and hence activation to units of all the pools except the instance pool. 
The instance pool, which is also known as the hidden pool is not accessible to the end user. Yet we can see the connections 
within and outside this pool by moving mouse pointer to respective units. 
<P>
</P>
        </div>

        </section>


 <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->

      <section id="experiment-article-section-4">

        <div id="experiment-article-section-4-icon" 
        class="icon">
	<img src="../images/procedure.jpg" />
	</div>

        <div id="experiment-article-section-4-heading" 
        class="heading">
         Procedure 
        </div>

        <div id="experiment-article-section-4-content" 
        class="content">
          <p>
<OL>
	<OL> 
		<OL>
	<P>	
	<LI><P>Check the initial state of the model by moving the mouse over various units in different pools.</P> 
	<LI><P>Check the value for every unit and the inhibitory and excitatory connections it exhibits with units in same and different pools.</P>
	<LI><P>Click on any unit in the 'Name' pool and let the model settle down (in a couple of seconds). The settling down can be observed through the global change scale in the bottom margin.</P>	
	<LI><P>Observe the connections between various units and pools (both green and red), popping up after the external input is provided.</P>
	<LI><P>Check with all the pools, the units with highest values within them, and match with the table provided in the tutorial section whether it belongs to same unit.</P>
	</P>
		</OL>
	</OL>	
</OL>
	        
          </p>
        </div>

        </section>


 <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->

      <section id="experiment-article-section-5">

        <div id="experiment-article-section-5-icon" 
        class="icon">
	<img src="../images/simulation.jpg" />
	</div>

        <div id="experiment-article-section-5-heading" 
        class="heading">
        Experiment 
        </div>

        <div id="experiment-article-section-5-content" 
        class="content">
	<p>
<table width="900">
<tr><td height="800"><IFRAME src="applet/index.html" style="width:100%;height:100%"></IFRAME> </td></tr>
<tr><td height="800"><IFRAME src = "tableTEMP.html" style="width:100%;height:100%"></IFRAME></td></tr>
</table>
</p>
        </div>

        </section>


 <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
        <section id="experiment-article-section-6">
      
          <div id="experiment-article-section-6-icon" 
          class="icon">
	    <!-- Enclose the icon image of your lab.-->
	<img src="../images/manual.jpg" />
	  </div>

          <div id="experiment-article-section-6-heading" 
          class="heading">
           Observations 
          </div>

          <div id="experiment-article-section-6-content" 
          class="content">
            
            <p>
	<OL>
		<OL>
			<OL>
				<LI><P>Observe the initial state of the model has inhibitory (red) connections with rest of the members in the same pool.</P>
				<LI><P>Note that the instance pool units have excitatory connections with all related data in every pool with that particular unit.</P>
				<LI><P>Note that initially all units in all the pools have negative activation value set at '-1.000' .</P>
				<LI><P>After clicking on any node in the 'Name' pool, we see that as the model settles down after calculation of weighted 
					inputs and outputs for respective units, all units have different values of output.</P>				
				<LI><P>Observe the values for units in every pool and find out which unit has the highest value.</P>
				<LI><P>Click on units in other pools apart from 'Names' and observe how activating 
				       multiple units leads to increased activation to units in the name pool.</P>

			</OL>
		</OL>
	</OL>
            
  
            </p>

          </div>

        </section>

	 
 <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
        <section id="experiment-article-section-7">
      
          <div id="experiment-article-section-7-icon" 
          class="icon">
	    <!-- Enclose the icon image of your lab.-->
	<img src="../images/manual.jpg" />
	  </div>

          <div id="experiment-article-section-7-heading" 
          class="heading">	
           Assignment 
          </div>

          <div id="experiment-article-section-7-content" 
          class="content">

<p>
<P>
Using the experiment identify the following properties of human memory to store and retrieve knowledge:
</P>
<OL>
	<OL>
		<OL>
			<LI><P>External activation to one unit in the name pool results in a positive change 
			       in activation of units in other pools as well as the instance pool.</P>
			<LI><P>External activation to a unit in the name pool leads towards positive 
			       activation of other names in the instance pool.</P>
			<LI><P>How the activation values changes when two or more names are chosen in the name pool.</P>
		</OL>
	</OL>
</OL>
 </p>
        
          </div>

        </section>

 <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
         <section id="experiment-article-section-8">

           <div id="experiment-article-section-8-icon" 
             class="icon">
           <!-- Enclose the icon image of your lab.-->
	<img src="../images/readings.jpg" />
           </div>
           <div id="experiment-article-section-8-heading" 
            class="heading">
            References
           </div>
           <div id="experiment-article-section-8-content" 
            class="content">
<p>													
<OL>
	<OL>
		<OL>
		<LI><P>B. Yegnanarayana, <i>Artificial Neural Networks</i>, New Delhi, India : Prentice-Hall of India, pg. 299, 1999.</P>
		<LI><P>J.L. McClelland, "Retrieving general and specific information from stored knowledge of specifics", in <i>Proceedings of the Third
		Annual Meeting of the Cognitive Science Society</i>, pp. 170-172, 1981.</P>
		<LI><P>J.L. McClelland and D.E. Rumelhart, <i>Explorations in Parallel Distributed Processing</i>, Cambridge MA: MIT Press, 1988.</P>
		<LI><P>D.E. Rumelhart, G.E. Hinton, and R.J. Williams, "Learning internal representations by error propagation", in 
		<i>Parallel Distributed Processing: Explorations in the Microstructure of Cognition</i>, vol. 1 
		(D.E. Rumelhart, J.L. McClelland, and the PDP Research Group, eds.), Cambridge, MA: MIT Press, pp. 318-362, 1986a.</P>
		</OL>
	</OL>
</OL>
</p>
	</div>
	</section>
	</div>


    <!-- An article can have a sidebar that contain related 
    links and additional material (however it is kept optional 
    at this moment) -->
    <aside id="lab-article-sidebar" class="default">
      <!-- put the content that you want to appear in the 
      sidebar -->	
    </aside>


    <!-- Article footer can display related content and 
    additional links -->						
    <footer id="lab-article-footer" class="default">
      <!-- Put the content that you want to appear here -->
    </footer>

  </article>


  <!-- Links to other labs, about us page can be kept the lab 
  footer-->
  <footer id="lab-footer" class="default">
    <!-- Put the content here-->
  </footer>

  <footer id="lab-header" class="heading">
  <!-- Put the content here-->
  <div id="lab-header-heading" class="heading">
  <!-- Write the name of your lab and link it to the home page
  of your lab. -->

  <center>
  <table><tr>
  <td><a href="http://speech.iiit.ac.in/" target=_blank><font size=-3>Developed at the Speech and Vision Lab, IIIT Hyderabad</font></a></td>
  </tr></table>
  </center>
  </div>

  </footer>


</div>		

</body>
</html>
